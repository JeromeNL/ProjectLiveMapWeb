@using DataAccess.Models
@model WebPortal.Models.FacilityViewModel

@{
    ViewBag.Title = "Faciliteit bekijken";
    Layout = "_Layout";
    var errorMessage = TempData["Error"] as string;
}
<h1 class="text-4xl">@Model.IsAlwaysOpen</h1>
<div class="flex flex-row">
    <div class="basis-1/2">
        <a asp-action="Index" class="inline-block w-auto px-5 py-2 text-sm text-gray-700 transition-colors duration-200 bg-white border rounded-lg gap-x-2 dark:hover:bg-gray-800 dark:bg-gray-900 hover:bg-gray-100 dark:text-gray-200 dark:border-gray-700">
            <svg class="w-5 h-5 rtl:rotate-180" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18" />
            </svg>
        </a>
        <div class="flex items-center space-x-4">
            <h2 class="text-2xl font-semibold">@Model.Facility.Name - @Model.Facility.Id</h2>
            <form id="deleteform" method="post" asp-action="Delete" asp-route-id="@Model.Facility.Id" onsubmit="return confirmDeletion()">
                <input type="hidden" name="_method" value="DELETE">
                <button type="submit" class="underline">Verwijder</button>
            </form>
        </div>
        <p>@Model.Facility.Description</p>
        <p>Categorie: @Model.Facility.Category.Name</p>
        <p>Icoontje:</p>
        <i class="ti ti-@Model.Facility.Category.IconName text-4xl"></i>
        <p>Huidige locatie:</p>
        <div id="map" class="h-[20vh] w-[20vw]"></div>
    </div>
    
    <div class="basis-1/2">
        <div class="inline-block w-auto px-5 py-5"></div>
           <div class="flex items-center space-x-3">
               <h2 class="text-2xl font-semibold">Openingstijden</h2>
          <a href="@Url.Action("SpecialOpeningHours", "OpeningHours", new { facilityId = Model.Facility.Id })" class="underline">Speciale openingstijden</a>

           </div>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="text-red-500">
                @errorMessage
            </div>
        }
       <div class="flex items-center space-x-2 my-4">
           <p class="font-bold">Altijd geopend</p> 
           <form asp-action="SwitchIsAlwaysOpen" asp-controller="Facility" method="post">
               <input type="checkbox" asp-for="IsAlwaysOpen" class="toggle" onchange="this.form.submit();" />
               <input type="hidden" name="id" value="@Model.Facility.Id" />
               <button hidden type="submit">Update Facility</button>
           </form>

       </div>

        <div class="">
            <form method="post" asp-controller="OpeningHours" asp-action="SaveOpeningHours" class="d-flex flex-column h-100">
                <table class="table mb-auto">
                    <thead>
                    <tr>
                        <th>Dag van de week</th>
                        <th>Openingstijd</th>
                        <th>Sluitingstijd</th>
                    </tr>
                    </thead>
                    <tbody>
                    @for (int i = 0; i < 7; i++)
                    {
                        var day = (DayOfWeek)i;
                        var dayName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetDayName(day);
                        var openingHour = Model.Facility.DefaultOpeningHours.FirstOrDefault(oh => oh.WeekDay == day);
            
                        <tr>
                            <td>@dayName</td>
                            <td>
                                <input type="time" class="form-control" name="DayHours[@i].OpenTime"
                                       value="@(openingHour?.OpenTime.ToString("HH\\:mm") ?? "")"
                                       @(Model.IsAlwaysOpen ? "readonly" : "") />
                            </td>
                            <td>
                                <input type="time" class="form-control" name="DayHours[@i].CloseTime"
                                       value="@(openingHour?.CloseTime.ToString("HH\\:mm") ?? "")"
                                       @(Model.IsAlwaysOpen ? "readonly" : "") />
                            </td>
                            <input type="hidden" name="DayHours[@i].Day" value="@day"/>
                        </tr>
                    }
                    <input type="hidden" name="FacilityId" value="@Model.Facility.Id"/>
                    </tbody>
                </table>
                <div class="mt-auto flex justify-end p-2">
                    <button type="submit" class="btn btn-primary" @(Model.IsAlwaysOpen ? "disabled" : "")>Opslaan</button>
                </div>
            </form>

        </div>
    </div>
</div>

@section Scripts
{
    <script>
        let markerLocation = L.latLng(@Model.Facility.Latitude.ToString(System.Globalization.CultureInfo.InvariantCulture), @Model.Facility.Longitude.ToString(System.Globalization.CultureInfo.InvariantCulture));
        let map = L.map('map', {
            center: markerLocation,
            zoom: 18
        });
        L.tileLayer('@Html.Raw("https://api.mapbox.com/styles/v1/thieme/clu785gfh00y201qshhlscngq/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoidGhpZW1lIiwiYSI6ImNsdTF6bDI3YTByZGMya24wNzgxM3lnaW8ifQ.es_E8PCEaZhsaYiGsl8q5A")', {
            maxZoom: 19,
        }).addTo(map);

        let icon = L.divIcon({
            html: `<i class="ti ti-@Model.Facility.Category.IconName text-lg"></i>`,
            className: 'facility-icon',
            iconSize: [35, 35],
            iconAnchor: [15, 15],
            popupAnchor: [0, -15]
        });

        let marker = L.marker(markerLocation, {
            title: '@Model.Facility.Name',
            icon: icon
        });
        marker.addTo(map).bindPopup(popupContent);
        
        function confirmDeletion() {
            return confirm('Weet u zeker dat u deze faciliteit wilt verwijderen?');
        }
    </script>
}


