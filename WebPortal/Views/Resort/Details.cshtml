@model DataAccess.Models.HolidayResort
@{
    ViewData["Title"] = "Park details - " + Model.Name;
    Layout = "_Layout";
}

<a asp-action="Index" class="inline-block w-auto px-5 py-2 text-sm text-gray-700 transition-colors duration-200 bg-white border rounded-lg gap-x-2 dark:hover:bg-gray-800 dark:bg-gray-900 hover:bg-gray-100 dark:text-gray-200 dark:border-gray-700">
    <svg class="w-5 h-5 rtl:rotate-180" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18"/>
    </svg>
</a>
<h2 class="text-xl font-bold">Parkdetails - @Model.Name</h2>

<form method="post" asp-action="Update" class="space-y-4">
    <input type="hidden" asp-for="Id"/>
    <div class="flex flex-row">
        <div class="px-6 py-4 flex flex-col">
            <label for="holidayResortName" class="block font-bold text-gray-700">Parknaam:</label>
            <input required id="holidayResortName" type="text" class="form-input rounded-md" asp-for="Name"/>
            <input id="coord" hidden type="text" class="form-input rounded-md" asp-for="Coordinates"/>
            <span asp-validation-for="Name" class="text-danger"></span>
            <span asp-validation-for="Coordinates" class="text-danger"></span>
        </div>
        <div id="map" class="h-[40vh] w-[40vw]"></div>
    </div>
    <div class="px-6 py-4">
        <button type="submit" class="btn btn-primary">Opslaan</button>
    </div>
</form>
<div>
</div>

@section Scripts
{
    <script>
        let map = L.map('map', {
            center: [51.65028080463477, 5.0484079052199275],
            zoom: 15,
            minZoom: 15,
            maxBounds: [[51.65409301291617, 5.055245412377415], [51.64602718326105, 5.041388287563508]]
        });
        L.tileLayer('@Html.Raw("https://api.mapbox.com/styles/v1/thieme/clu785gfh00y201qshhlscngq/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoidGhpZW1lIiwiYSI6ImNsdTF6bDI3YTByZGMya24wNzgxM3lnaW8ifQ.es_E8PCEaZhsaYiGsl8q5A")').addTo(map);
        
        const coords = document.getElementById("coord")
        
        if (coords.value != ""){
            var jsonData = JSON.parse(coords.value)

            console.log("value: " + jsonData)
            var latLngs = jsonData.map(function(item) {
                return [item.lat, item.lng];
            });
            console.log("latlngs: " + latLngs)
    
            // Create a polygon and add it to the map
            var polygon = L.polygon(latLngs).addTo(map);
        }
        // add Leaflet-Geoman controls with some options to the map  
        map.pm.addControls({  
          position: 'topleft',  
          drawCircleMarker: false,
          drawMarker: false,
          drawPolyline: false,
          drawRectangle: false,
          drawCircle: false,
          drawText: false,
          rotateMode: false,
          editMode: false,
          dragMode: false,
          cutPolygon: false,
        }); 
        
        map.on('pm:create', (e) => {
            map.pm.addControls({  
                drawPolygon: false,
            }); 
            coords.value = JSON.stringify(e.layer._latlngs[0])
        })
        map.on('pm:remove', (e) => {
            map.pm.addControls({
                drawPolygon: true,
            })
            coords.value = ""
        })
    </script>
}
